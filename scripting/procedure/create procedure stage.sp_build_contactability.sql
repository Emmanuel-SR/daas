CREATE PROCEDURE STAGE.SP_BUILD_CONTACTABILITY (@LOAD_DATE AS DATE) AS

BEGIN

  DECLARE @PERIOD AS CHAR(6);

  BEGIN TRY

  SELECT @PERIOD = LEFT(CONVERT(CHAR, @LOAD_DATE, 112), 6);  /* YYYYMM */

  -- STEP 01: CREATE TABLE STAGE.TMP_CONTACTABILITY_01
  IF OBJECT_ID(N'[CIP_DM].[STAGE].[TMP_CONTACTABILITY_01]',N'U') IS NOT NULL DROP TABLE CIP_DM.STAGE.TMP_CONTACTABILITY_01;

  SELECT
    C1.HISTORY_DATE,
    C1.PRODUCT_KEY,
    C1.NEGOTIATOR_KEY,
    C1.TOTAL_CALLS,
    C1.SUCCESSFUL_CONTACTS
  INTO STAGE.TMP_CONTACTABILITY_01
  FROM DATA.CONTACTABILITY_1 C1
  WHERE LEFT(C1.HISTORY_DATE,6) <> @PERIOD; /* YYYYMM */

  -- STEP 02: CREATE TABLE STAGE.TMP_CONTACTABILITY_02
  IF OBJECT_ID(N'[CIP_DM].[STAGE].[TMP_CONTACTABILITY_02]',N'U') IS NOT NULL DROP TABLE CIP_DM.STAGE.TMP_CONTACTABILITY_02;

SELECT
    N.HISTORY_DATE,
    C.PRODUCT_KEY,
    N.NEGOTIATOR_KEY,
    COUNT(N.RESPONSE_KEY) AS TOTAL_CALLS,
    COUNT(CASE WHEN N.RESPONSE_KEY = 1 OR N.RESPONSE_KEY = 3 THEN 1 ELSE NULL END) AS SUCCESSFUL_CONTACTS
  INTO STAGE.TMP_CONTACTABILITY_02
  FROM DATA.FACT_NEGOTATION N
   INNER JOIN DATA.DIM_CREDIT C
     ON C.CREDIT_KEY = N.CREDIT_KEY
   INNER JOIN DATA.DIM_PRODUCT O
     ON O.PRODUCT_KEY = C.PRODUCT_KEY
  WHERE N.ACTION_KEY = 1 AND LEFT(N.HISTORY_DATE, 6) = @PERIOD
   GROUP BY N.HISTORY_DATE, C.PRODUCT_KEY, N.NEGOTIATOR_KEY
   ORDER BY N.HISTORY_DATE ASC;

  -- STEP 03: CREATE TABLE DATA.CONTACTABILITY_1_PREV
  IF OBJECT_ID(N'[CIP_DM].[DATA].[CONTACTABILITY_1_PREV]',N'U') IS NOT NULL DROP TABLE CIP_DM.DATA.CONTACTABILITY_1_PREV;

  SELECT
    PREV.HISTORY_DATE,
    PREV.PRODUCT_KEY,
    PREV.NEGOTIATOR_KEY,
    PREV.TOTAL_CALLS,
    PREV.SUCCESSFUL_CONTACTS
  INTO DATA.CONTACTABILITY_1_PREV FROM
  (
    SELECT
      C1.HISTORY_DATE,
      C1.PRODUCT_KEY,
      C1.NEGOTIATOR_KEY,
      C1.TOTAL_CALLS,
      C1.SUCCESSFUL_CONTACTS
    FROM STAGE.TMP_CONTACTABILITY_01 C1
    UNION ALL
    SELECT
      C2.HISTORY_DATE,
      C2.PRODUCT_KEY,
      C2.NEGOTIATOR_KEY,
      C2.TOTAL_CALLS,
      C2.SUCCESSFUL_CONTACTS
    FROM STAGE.TMP_CONTACTABILITY_02 C2
  ) PREV
  ORDER BY HISTORY_DATE ASC;

  -- STEP 04: DROP TMP TABLAS
  IF OBJECT_ID('[CIP_DM].[STAGE].[TMP_CONTACTABILITY_01]') IS NOT NULL DROP TABLE CIP_DM.STAGE.TMP_CONTACTABILITY_01;
  IF OBJECT_ID('[CIP_DM].[STAGE].[TMP_CONTACTABILITY_02]') IS NOT NULL DROP TABLE CIP_DM.STAGE.TMP_CONTACTABILITY_02;

  -- STEP 05: CREATE INDEXES AND CONSTRAINTS DATA.CONTACTABILITY_1_PREV
  ALTER TABLE DATA.CONTACTABILITY_1_PREV ALTER COLUMN HISTORY_DATE INTEGER NOT NULL;
  ALTER TABLE DATA.CONTACTABILITY_1_PREV ALTER COLUMN PRODUCT_KEY INTEGER NOT NULL;
  ALTER TABLE DATA.CONTACTABILITY_1_PREV ALTER COLUMN NEGOTIATOR_KEY INTEGER NOT NULL;
  ALTER TABLE DATA.CONTACTABILITY_1_PREV ALTER COLUMN TOTAL_CALLS INTEGER NOT NULL;
  ALTER TABLE DATA.CONTACTABILITY_1_PREV ALTER COLUMN SUCCESSFUL_CONTACTS INTEGER NOT NULL;

  ALTER TABLE DATA.CONTACTABILITY_1_PREV ADD CONSTRAINT FK_CONT1_HISTORY_DATE_PREV FOREIGN KEY (HISTORY_DATE)
    REFERENCES DATA.DIM_DATE(DATE_KEY);
  ALTER TABLE DATA.CONTACTABILITY_1_PREV ADD CONSTRAINT FK_CONT1_PRODUCT_KEY_PREV FOREIGN KEY (PRODUCT_KEY)
    REFERENCES DATA.DIM_PRODUCT(PRODUCT_KEY);
  ALTER TABLE DATA.CONTACTABILITY_1_PREV ADD CONSTRAINT FK_CONT1_NEGOTIATOR_KEY_PREV FOREIGN KEY (NEGOTIATOR_KEY)
    REFERENCES DATA.DIM_NEGOTIATOR(NEGOTIATOR_KEY);

  -- STEP 06: REPLACE SYNONYM DATA.CONTACTABILITY TO DATA.CONTACTABILITY_1_PREV
  DROP SYNONYM DATA.CONTACTABILITY;
  CREATE SYNONYM DATA.CONTACTABILITY FOR DATA.CONTACTABILITY_1_PREV;

  -- STEP 07: RENAME TABLE DATA.CONTACTABILITY_1 TO DATA.CONTACTABILITY_1_OLD
  EXEC sp_rename 'DATA.CONTACTABILITY_1', 'CONTACTABILITY_1_OLD';

  -- STEP 08: RENAME INDEXES AND CONSTRAINTS DATA.CONTACTABILITY_1_OLD
  EXEC sp_rename 'DATA.FK_CONT1_HISTORY_DATE', 'FK_CONT1_HISTORY_DATE_OLD';
  EXEC sp_rename 'DATA.FK_CONT1_PRODUCT_KEY', 'FK_CONT1_PRODUCT_KEY_OLD';
  EXEC sp_rename 'DATA.FK_CONT1_NEGOTIATOR_KEY', 'FK_CONT1_NEGOTIATOR_KEY_OLD';

  -- STEP 09: REPLACE SYNONYM DATA.CONTACTABILITY TO DATA.CONTACTABILITY_1_OLD
  DROP SYNONYM DATA.CONTACTABILITY;
  CREATE SYNONYM DATA.CONTACTABILITY FOR DATA.CONTACTABILITY_1_OLD;

  -- STEP 10: RENAME TABLE DATA.CONTACTABILITY_1_PREV TO DATA.CONTACTABILITY_1
  EXEC sp_rename 'DATA.CONTACTABILITY_1_PREV', 'CONTACTABILITY_1';

  -- STEP 11: RENAME INDEXES AND CONSTRAINTS DATA.CONTACTABILITY_1_PREV 
  EXEC sp_rename 'DATA.FK_CONT1_HISTORY_DATE_PREV', 'FK_CONT1_HISTORY_DATE';
  EXEC sp_rename 'DATA.FK_CONT1_PRODUCT_KEY_PREV', 'FK_CONT1_PRODUCT_KEY';
  EXEC sp_rename 'DATA.FK_CONT1_NEGOTIATOR_KEY_PREV', 'FK_CONT1_NEGOTIATOR_KEY';

  -- STEP 12: REPLACE SYNONYM DATA.CONTACTABILITY TO DATA.CONTACTABILITY_1
  DROP SYNONYM DATA.CONTACTABILITY;
  CREATE SYNONYM DATA.CONTACTABILITY FOR DATA.CONTACTABILITY_1;

  -- STEP 13: DROP OLD TABLE
  IF OBJECT_ID(N'[CIP_DM].[DATA].[CONTACTABILITY_1_OLD]',N'U') IS NOT NULL DROP TABLE CIP_DM.DATA.CONTACTABILITY_1_OLD;

  END TRY

  BEGIN CATCH

    DECLARE @ERROR_MESSAGE NVARCHAR(4000);
    DECLARE @ERROR_SEVERITY INT;
    DECLARE @ERROR_STATE INT;

    SELECT
      @ERROR_MESSAGE = ERROR_MESSAGE(),
      @ERROR_SEVERITY = ERROR_SEVERITY(),
      @ERROR_STATE = ERROR_STATE();

    RAISERROR (@ERROR_MESSAGE, @ERROR_SEVERITY, @ERROR_STATE);

  END CATCH

END;