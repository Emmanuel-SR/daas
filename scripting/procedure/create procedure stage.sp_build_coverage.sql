CREATE PROCEDURE STAGE.SP_BUILD_COVERAGE AS

BEGIN

  BEGIN TRY

  -- STEP 01: CREATE TABLE DATA.COVERAGE_1_PREV
  IF OBJECT_ID(N'[CIP_DM].[DATA].[COVERAGE_1_PREV]',N'U') IS NOT NULL DROP TABLE CIP_DM.DATA.COVERAGE_1_PREV;

    SELECT
    H.PERIOD_CODE,
    C.PRODUCT_KEY,
    H.NEGOTIATOR_KEY,
    (
      SELECT COUNT(DISTINCT H2.CREDIT_KEY)
      FROM DATA.HIST_ASSIGNMENT H2
      INNER JOIN DATA.DIM_CREDIT C2 ON C2.CREDIT_KEY = H2.CREDIT_KEY
      WHERE C2.PRODUCT_KEY = C.PRODUCT_KEY AND H2.NEGOTIATOR_KEY = H.NEGOTIATOR_KEY AND H2.PERIOD_CODE = H.PERIOD_CODE AND EXISTS 
      (SELECT 1 FROM DATA.FACT_NEGOTATION N WHERE N.CREDIT_KEY = H2.CREDIT_KEY AND LEFT(N.HISTORY_DATE,6) = H2.PERIOD_CODE)
    ) AS COVERAGE,
    COUNT(H.CREDIT_KEY) AS ASSIGMENTS
  INTO DATA.COVERAGE_1_PREV
  FROM DATA.HIST_ASSIGNMENT H
    INNER JOIN DATA.DIM_CREDIT C
    ON C.CREDIT_KEY = H.CREDIT_KEY
  GROUP BY H.PERIOD_CODE, C.PRODUCT_KEY, H.NEGOTIATOR_KEY
  ORDER BY H.PERIOD_CODE DESC;

  -- STEP 02: CREATE INDEXES AND CONSTRAINTS DATA.COVERAGE_1_PREV
  ALTER TABLE DATA.COVERAGE_1_PREV ALTER COLUMN PERIOD_CODE CHAR(6) NOT NULL;
  ALTER TABLE DATA.COVERAGE_1_PREV ALTER COLUMN PRODUCT_KEY INTEGER NOT NULL;
  ALTER TABLE DATA.COVERAGE_1_PREV ALTER COLUMN NEGOTIATOR_KEY INTEGER NOT NULL;
  ALTER TABLE DATA.COVERAGE_1_PREV ALTER COLUMN COVERAGE INTEGER NOT NULL;
  ALTER TABLE DATA.COVERAGE_1_PREV ALTER COLUMN ASSIGMENTS INTEGER NOT NULL;

  ALTER TABLE DATA.COVERAGE_1_PREV ADD CONSTRAINT FK_COVG1_PRODUCT_KEY_PREV FOREIGN KEY (PRODUCT_KEY)
    REFERENCES DATA.DIM_PRODUCT(PRODUCT_KEY);
  ALTER TABLE DATA.COVERAGE_1_PREV ADD CONSTRAINT FK_COVG1_NEGOTIATOR_KEY_PREV FOREIGN KEY (NEGOTIATOR_KEY)
    REFERENCES DATA.DIM_NEGOTIATOR(NEGOTIATOR_KEY);

  -- STEP 03: REPLACE SYNONYM DATA.COVERAGE TO DATA.COVERAGE_1_PREV
  DROP SYNONYM DATA.COVERAGE;
  CREATE SYNONYM DATA.COVERAGE FOR DATA.COVERAGE_1_PREV;

  -- STEP 04: RENAME TABLE DATA.COVERAGE_1 TO DATA.COVERAGE_1_OLD
  EXEC sp_rename 'DATA.COVERAGE_1', 'COVERAGE_1_OLD';

  -- STEP 05: RENAME INDEXES AND CONSTRAINTS DATA.COVERAGE_1_OLD
  EXEC sp_rename 'DATA.FK_COVG1_PRODUCT_KEY', 'FK_COVG1_PRODUCT_KEY_OLD';
  EXEC sp_rename 'DATA.FK_COVG1_NEGOTIATOR_KEY', 'FK_COVG1_NEGOTIATOR_KEY_OLD';

  -- STEP 06: REPLACE SYNONYM DATA.COVERAGE TO DATA.COVERAGE_1_OLD
  DROP SYNONYM DATA.COVERAGE;
  CREATE SYNONYM DATA.COVERAGE FOR DATA.COVERAGE_1_OLD;

  -- STEP 07: RENAME TABLE DATA.COVERAGE_1_PREV TO DATA.COVERAGE_1
  EXEC sp_rename 'DATA.COVERAGE_1_PREV', 'COVERAGE_1';

  -- STEP 08: RENAME INDEXES AND CONSTRAINTS DATA.COVERAGE_1_PREV 
  EXEC sp_rename 'DATA.FK_COVG1_PRODUCT_KEY_PREV', 'FK_COVG1_PRODUCT_KEY';
  EXEC sp_rename 'DATA.FK_COVG1_NEGOTIATOR_KEY_PREV', 'FK_COVG1_NEGOTIATOR_KEY';

  -- STEP 09: REPLACE SYNONYM DATA.COVERAGE TO DATA.COVERAGE_1
  DROP SYNONYM DATA.COVERAGE;
  CREATE SYNONYM DATA.COVERAGE FOR DATA.COVERAGE_1;

  -- STEP 10: DROP OLD TABLE
  IF OBJECT_ID(N'[CIP_DM].[DATA].[COVERAGE_1_OLD]',N'U') IS NOT NULL DROP TABLE CIP_DM.DATA.COVERAGE_1_OLD;

  END TRY

  BEGIN CATCH

    DECLARE @ERROR_MESSAGE NVARCHAR(4000);
    DECLARE @ERROR_SEVERITY INT;
    DECLARE @ERROR_STATE INT;

    SELECT
      @ERROR_MESSAGE = ERROR_MESSAGE(),
      @ERROR_SEVERITY = ERROR_SEVERITY(),
      @ERROR_STATE = ERROR_STATE();

    RAISERROR (@ERROR_MESSAGE, @ERROR_SEVERITY, @ERROR_STATE);

  END CATCH

END;